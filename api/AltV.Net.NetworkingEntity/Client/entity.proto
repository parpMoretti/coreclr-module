syntax = "proto3";

package Entity;

message Position {
    float x = 1;
    float y = 2;
    float z = 3;
}

message Entity {
    uint64 id = 1;
    Position position = 2;
    int32 dimension = 3;
    float range = 4;
    map<string, MValue> data = 5;
}

message DictionaryMValue {
    map<string, MValue> value = 1;
}

message ListMValue {
    repeated MValue value = 1;
}

message MValue {
    oneof MValue {
        bool boolValue = 1;
        double doubleValue = 2;
        string stringValue = 3;
        int64 intValue = 4;
        uint64 uintValue = 5;
        DictionaryMValue dictionaryValue = 6;
        ListMValue listValue = 7;
        uint64 entityValue = 8;
        bool nullValue = 9;// We send this to indicate MValue is null for e.g. remove event
    }
}

message EntityDataChangeEvent {
    uint64 id = 1;
    string key = 2;
    MValue value = 3;
}

message EntityMultipleDataChangeEvent {
    uint64 id = 1;
    map<string, MValue> data = 2;
}

message EntitySendEvent {
    repeated Entity entities = 1;
}

message EntityPositionChangeEvent {
    uint64 id = 1;
    Position position = 2;
}

message EntityRangeChangeEvent {
    uint64 id = 1;
    float range = 2;
}

message EntityDimensionChangeEvent {
    uint64 id = 1;
    int32 dimension = 2;
}

message EntityDeleteEvent {
    uint64 id = 1;
}

message EntityCreateEvent {
    Entity entity = 1;
}

message EntityStreamInEvent {
    uint64 entityId = 1;
}

message EntityStreamOutEvent {
    uint64 entityId = 1;
}

message AuthEvent {
    string token = 1;
}

message ClientDimensionChangeEvent {
    int64 dimension = 1;
}

message ServerEvent {
    oneof Event {
        EntityDataChangeEvent dataChange = 1;
        EntitySendEvent send = 2;
        EntityPositionChangeEvent positionChange = 3;
        EntityRangeChangeEvent rangeChange = 4;
        EntityDeleteEvent delete = 5;
        EntityCreateEvent create = 6;
        EntityMultipleDataChangeEvent multipleDataChange = 7;
        EntityDimensionChangeEvent dimensionChange = 8;
        ClientDimensionChangeEvent clientDimensionChange = 9;
    }
}

message ClientEvent {
    oneof Event {
        AuthEvent auth = 1;
        EntityStreamInEvent streamIn = 2;
        EntityStreamOutEvent streamOut = 3;
    }
}